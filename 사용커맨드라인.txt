npm init -y
npm install express typescript @types/express ts-node
npx ts-node src/app.ts


docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --build-arg RDS_USERNAME=${{ secrets.RDS_USERNAME }} --build-arg RDS_PASSWORD=${{ secrets.RDS_PASSWORD }} --build-arg RDS_HOSTNAME=${{ secrets.RDS_HOSTNAME }} --build-arg RDS_DATABASE=project4 .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

git init
vi .gitignore
git add .
git commit "feat: 테스트"
git pull origin main
git push origin main


minikube start --driver=docker -n=3 --container-runtime=containerd --cri-socket=/run/containerd/containerd.sock --cni=calico --kubernetes-version=v1.24.17 --memory='3000m'


git checkout main
git checkout -b helm
git push --set-upstream origin helm

https://${username}.github.io/${repository-name}/{chart-dir-name}
https://madame3369.github.io/toyproject-1/server

helm create .
helm package helm -d charts/
helm repo index charts

git add
git commit
git push

helm repo add toyproject https://madame3369.github.io/toyproject-1/charts
helm install toyproject toyproject/toyproject1


aws configure --profile=madame3369

export TF_CLOUD_ORGANIZATION=madame3369
terraform init


terraform apply

aws eks --region $(terraform output -raw region) update-kubeconfig \
    --name $(terraform output -raw cluster_name)

terraform destroy
